name: CaesiusHatPast
description: lttp/ahit for ENDLESS TOWERS Rogue-Lite async
game:
  A Hat in Time: 50
  A Link to the Past: 60

A Link to the Past:
  # Game Options
  progression_balancing:
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    locations: 0
    items: 50
    minimal: 0

  goal:
    # Ganon: Climb GT, defeat Agahnim 2, and then kill Ganon
    # Crystals: Only killing Ganon is required. However, items may still be placed in GT
    # Bosses: Defeat the boss of all dungeons, including Agahnim's tower and GT (Aga 2)
    # Pedestal: Pull the Triforce from the Master Sword pedestal
    # Ganon Pedestal: Pull the Master Sword pedestal, then kill Ganon
    # Triforce Hunt: Collect Triforce pieces spread throughout the worlds, then turn them in to Murahadala in front of Hyrule Castle
    # Local Triforce Hunt: Collect Triforce pieces spread throughout your world, then turn them in to Murahadala in front of Hyrule Castle
    # Ganon Triforce Hunt: Collect Triforce pieces spread throughout the worlds, then kill Ganon
    # Local Ganon Triforce Hunt: Collect Triforce pieces spread throughout your world, then kill Ganon
    ganon: 20
    crystals: 20
    bosses: 20
    pedestal: 20
    triforce_hunt: 20

  mode:
    # Standard: Begin the game by rescuing Zelda from her cell and escorting her to the Sanctuary
    # Open: Begin the game from your choice of Link's House or the Sanctuary
    # Inverted: Begin in the Dark World. The Moon Pearl is required to avoid bunny-state in Light World, and the Light World game map is altered
    standard: 20
    open: 50
    inverted: 50

  glitches_required:
    # Determine the logic required to complete the seed
    # None: No glitches required
    # Minor Glitches: Puts fake flipper, waterwalk, super bunny shenanigans, and etc into logic
    # Overworld Glitches: Assumes the player has knowledge of both overworld major glitches (boots clips, mirror clips) and minor glitches
    # Hybrid Major Glitches: In addition to overworld glitches, also requires underworld clips between dungeons.
    # No Logic: Your own items are placed with no regard to any logic; such as your Fire Rod can be on your Trinexx.
    no_glitches: 50
    minor_glitches: 0
    overworld_glitches: 0
    hybrid_major_glitches: 0
    no_logic: 0

  dark_room_logic:
    # Logic for unlit dark rooms. Lamp: require the Lamp for these rooms to be considered accessible.
    # Torches: in addition to lamp, allow the fire rod and presence of easily accessible torches for access.
    # None: all dark rooms are always considered doable, meaning this may force completion of rooms in complete darkness.
    lamp: 50
    torches: 50
    none: 0

  open_pyramid:
    # Determines whether the hole at the top of pyramid is open.
    # Goal will open the pyramid if the goal requires you to kill Ganon, without needing to kill Agahnim 2.
    # Auto is the same as goal except if Ganon's dropdown is in another location, the hole will be closed.
    closed: 0
    open: 0
    goal: 0
    auto: 50

  crystals_needed_for_gt:
    # Number of crystals needed to open Ganon's Tower
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 50
    random-low: 0
    random-high: 0

  crystals_needed_for_ganon:
    # Number of crystals needed to damage Ganon
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 50
    random-low: 0
    random-high: 0

  triforce_pieces_mode:
    # Determine how to calculate the extra available triforce pieces.
    # Extra: available = triforce_pieces_extra + triforce_pieces_required
    # Percentage: available = (triforce_pieces_percentage /100) * triforce_pieces_required
    # Available: available = triforce_pieces_available
    extra: 50
    percentage: 50
    available: 50

  triforce_pieces_percentage:
    # Set to how many triforce pieces according to a percentage of the required ones, are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 100
    # Maximum value is 1000
    random-range-150-250: 50

  triforce_pieces_required:
    # Set to how many out of X triforce pieces you need to win the game in a triforce hunt.
    # Default is 20. Max is 90, Min is 1.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    random-range-15-25: 50

  triforce_pieces_available:
    # Set to how many triforces pieces are available to collect in the world. Default is 30. Max is 90, Min is 1
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    random-range-25-35: 50

  triforce_pieces_extra:
    # Set to how many extra triforces pieces are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 89
    random-range-15-25: 50

  entrance_shuffle:
    # Dungeons Simple: Shuffle just dungeons amongst each other, swapping dungeons entirely, so Hyrule Castle is always 1 dungeon.
    # Dungeons Full: Shuffle any dungeon entrance with any dungeon interior, so Hyrule Castle can be 4 different dungeons, but keep dungeons to a specific world.
    # Dungeons Crossed: like dungeons_full, but allow cross-world traversal through a dungeon. Warning: May force repeated dungeon traversal.
    # Simple: Entrances are grouped together before being randomized. Interiors with two entrances are grouped shuffled together with each other,
    # and Death Mountain entrances are shuffled only on Death Mountain. Dungeons are swapped entirely.
    # Restricted: Like Simple, but single entrance interiors, multi entrance interiors, and Death Mountain interior entrances are all shuffled with each other.
    # Full: Like Restricted, but all Dungeon entrances are shuffled with all non-Dungeon entrances.
    # Crossed: Like Full, but interiors with multiple entrances are no longer confined to the same world, which may allow crossing worlds.
    # Insanity: Like Crossed, but entrances and exits may be decoupled from each other, so that leaving through an exit may not return you to the entrance you entered from.
    vanilla: 10
    dungeons_simple: 0
    dungeons_full: 0
    dungeons_crossed: 0
    simple: 50
    restricted: 0
    full: 50
    crossed: 50
    insanity: 0

  entrance_shuffle_seed:
    # You can specify a number to use as an entrance shuffle seed, or a group name. Everyone with the same group name
    # will get the same entrance shuffle result as long as their Entrance Shuffle, Mode, Retro Caves, and Glitches
    # Required options are the same.
    random: 50

  big_key_shuffle:
    # Big Key Placement
    original_dungeon: 50

  small_key_shuffle:
    # Small Key Placement
    original_dungeon: 50

  key_drop_shuffle:
    # Shuffle keys found in pots and dropped from killed enemies,
    # respects the small key and big key shuffle options.
    'false': 0
    'true': 50

  compass_shuffle:
    # Compass Placement
    start_with: 50

  map_shuffle:
    # Map Placement
    start_with: 50

  restrict_dungeon_item_on_boss:
    # Don't place dungeon-native items on the dungeon's boss.
    'false': 50
    'true': 0

  item_pool:
    # Easy: Doubled upgrades, progressives, and etc. Normal:  Item availability remains unchanged from vanilla game.
    # Hard: Reduced upgrade availability (max: 14 hearts, blue mail, tempered sword, fire shield, no silvers unless swordless).
    # Expert: Minimum upgrade availability (max: 8 hearts, green mail, master sword, fighter shield, no silvers unless swordless).
    easy: 30
    normal: 50
    hard: 20
    expert: 10

  item_functionality:
    # Easy: Allow Hammer to damage ganon, Allow Hammer tablet collection, Allow swordless medallion use everywhere.
    # Normal: Vanilla item functionality
    # Hard: Reduced helpfulness of items (potions less effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs do not stun, silvers disabled outside ganon)
    # Expert: Vastly reduces the helpfulness of items (potions barely effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs and hookshot do not stun, silvers disabled outside ganon)
    easy: 30
    normal: 50
    hard: 20
    expert: 10

  enemy_health:
    # Default: Vanilla enemy HP. Easy: Enemies have reduced health. Hard: Enemies have increased health.
    # Expert: Enemies have greatly increased health.
    easy: 30
    default: 50
    hard: 20
    expert: 10

  enemy_damage:
    # Default: Vanilla enemy damage. Shuffled: 0 # Enemies deal 0 to 4 hearts and armor helps.
    # Chaos: Enemies deal 0 to 8 hearts and armor just reshuffles the damage.
    default: 50
    shuffled: 50
    chaos: 20

  progressive:
    # How item types that have multiple tiers (armor, bows, gloves, shields, and swords) should be rewarded
    'off': 0
    grouped_random: 0
    'on': 50

  swordless:
    # No swords. Curtains in Skull Woods and Agahnim's
    # Tower are removed, Agahnim's Tower barrier can be
    # destroyed with hammer. Misery Mire and Turtle Rock
    # can be opened without a sword. Hammer damages Ganon.
    # Ether and Bombos Tablet can be activated with Hammer
    # (and Book).
    'false': 50
    'true': 50

  dungeon_counters:
    # On: Always display amount of items checked in a dungeon. Pickup: Show when compass is picked up.
    # Default: Show when compass is picked up if the compass itself is shuffled. Off: Never show item count in dungeons.
    'on': 0
    pickup: 50
    default: 0
    'off': 0

  retro_bow:
    # Zelda-1 like mode. You have to purchase a quiver to shoot arrows using rupees.
    'false': 50
    'true': 50

  retro_caves:
    # Zelda-1 like mode. There are randomly placed take-any caves that contain one Sword and
    # choices of Heart Container/Blue Potion.
    'false': 50
    'true': 50

  hints:
    # On/Full: Put item and entrance placement hints on telepathic tiles and some NPCs, Full removes joke hints.
    'off': 0
    'on': 50
    full: 0

  scams:
    # If on, these Merchants will no longer tell you what they're selling.
    'off': 50
    king_zora: 0
    bottle_merchant: 0
    all: 0

  boss_shuffle:
    # Shuffles bosses around to different locations.
    # Basic will shuffle all bosses except Ganon and Agahnim anywhere they can be placed.
    # Full chooses 3 bosses at random to be placed twice instead of Lanmolas, Moldorm, and Helmasaur.
    # Chaos allows any boss to appear any number of times.
    # Singularity places a single boss in as many places as possible, and a second boss in any remaining locations.
    # Supports plando placement.
    none: 50
    basic: 50
    full: 50
    chaos: 50
    singularity: 50

  pot_shuffle:
    # Shuffle contents of pots within "supertiles" (item will still be nearby original placement).
    'false': 50
    'true': 0

  enemy_shuffle:
    # Randomize every enemy spawn.
    # If mode is Standard, Hyrule Castle is left out (may result in visually wrong enemy sprites in that area.)
    'false': 20
    'true': 80

  killable_thieves:
    # Makes Thieves killable.
    'false': 50
    'true': 50

  bush_shuffle:
    # Randomize chance that a bush contains an enemy as well as which enemy may spawn.
    'false': 50
    'true': 50

  shop_item_slots:
    # Number of slots in all shops available to have items from the multiworld
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    0: 0
    random: 50
    random-low: 0
    random-high: 0

  randomize_shop_inventories:
    # Generate new default inventories for overworld/underworld shops, and unique shops; or each shop independently
    default: 50
    randomize_by_shop_type: 50
    randomize_each: 50

  shuffle_shop_inventories:
    # Shuffle default inventories of the shops around
    'false': 50
    'true': 50

  include_witch_hut:
    # Consider witch's hut like any other shop and shuffle/randomize it too
    'false': 50
    'true': 50

  randomize_shop_prices:
    # Randomize the prices of the items in shop inventories
    'false': 50
    'true': 50

  randomize_cost_types:
    # Prices of the items in shop inventories may cost hearts, arrow, or bombs instead of rupees
    'false': 50
    'true': 50

  shop_price_modifier:
    # Percentage modifier for shuffled item prices in shops
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 400
    100: 0
    random: 50
    random-low: 0
    random-high: 0

  shuffle_capacity_upgrades:
    # Shuffle capacity upgrades into the item pool (and allow them to traverse the multiworld).
    # On Combined will shuffle only a single bomb upgrade and arrow upgrade each which bring you to the maximum capacity.
    'off': 0
    'on': 50
    on_combined: 50

  bombless_start:
    # Start with a max of 0 bombs available, requiring Bomb Upgrade items in order to use bombs
    'false': 50
    'true': 0

  shuffle_prizes:
    # Shuffle "general" prize packs, as in enemy, tree pull, dig etc.; "bonk" prizes; or both.
    'off': 0
    general: 50
    bonk: 0
    both: 50

  tile_shuffle:
    # Randomize flying tiles floor patterns.
    'false': 50
    'true': 50

  misery_mire_medallion:
    # Required medallion to open Misery Mire front entrance.
    ether: 0
    bombos: 0
    quake: 0
    random: 50

  turtle_rock_medallion:
    # Required medallion to open Turtle Rock front entrance.
    ether: 0
    bombos: 0
    quake: 0
    random: 50

  glitch_boots:
    # If this is enabled, the player will start with Pegasus Boots when playing with overworld glitches or harder logic.
    'false': 0
    'true': 50

  beemizer_total_chance:
    # Percentage chance for each junk-fill item (rupees, bombs, arrows) to be
    # replaced with either a bee swarm trap or a single bottle-filling bee.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 50
    random-high: 0

  beemizer_trap_chance:
    # Percentage chance for each replaced junk-fill item to be a bee swarm
    # trap; all other replaced items are single bottle-filling bees.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 0
    random: 50
    random-low: 0
    random-high: 0

  timer:
    # None: No timer will be displayed. OHKO: Timer always at zero. Permanent OHKO.
    # Timed: Starts with clock at zero. Green clocks subtract 4 minutes (total 20). Blue clocks subtract 2 minutes (total 10). Red clocks add two minutes (total 10). Winner is the player with the lowest time at the end.
    # Timed OHKO: Starts the clock at ten minutes. Green clocks add five minutes (total 25). As long as the clock as at zero, Link will die in one hit.
    # Timed Countdown: Starts the clock with forty minutes. Same clocks as timed mode, but if the clock hits zero you lose. You can still keep playing, though.
    # Display: Displays a timer, but otherwise does not affect gameplay or the item pool.
    none: 50
    timed: 0
    timed_ohko: 30
    ohko: 0
    timed_countdown: 0
    display: 0

  countdown_start_time:
    # For Timed OHKO and Timed Countdown timer modes, the amount of time in minutes to start with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 480
    60: 50
    120: 50
    180: 50
    240: 50
    300: 50

  red_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a red clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    -2: 50
    random: 0
    random-low: 0
    random-high: 0

  blue_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a blue clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  green_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a green clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    30: 50
    60: 50
    90: 50
    120: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    'false': 0
    'true': 50

  allow_collect:
    # Allows for !collect / co-op to auto-open chests containing items for other players.
    'false': 0
    'true': 50

  ow_palettes:
    # The type of palette shuffle to use for the overworld
    default: 50
    good: 50
    blackout: 50
    puke: 50
    classic: 50
    grayscale: 50
    negative: 50
    dizzy: 50
    sick: 50

  uw_palettes:
    # The type of palette shuffle to use for the underworld (caves, dungeons, etc.)
    default: 50
    good: 50
    blackout: 50
    puke: 50
    classic: 50
    grayscale: 50
    negative: 50
    dizzy: 50
    sick: 50

  hud_palettes:
    # The type of palette shuffle to use for the HUD
    default: 50
    good: 50
    blackout: 50
    puke: 50
    classic: 50
    grayscale: 50
    negative: 50
    dizzy: 50
    sick: 50

  sword_palettes:
    # The type of palette shuffle to use for the sword
    default: 50
    good: 50
    blackout: 50
    puke: 50
    classic: 50
    grayscale: 50
    negative: 50
    dizzy: 50
    sick: 50

  shield_palettes:
    # The type of palette shuffle to use for the shield
    default: 50
    good: 50
    blackout: 50
    puke: 50
    classic: 50
    grayscale: 50
    negative: 50
    dizzy: 50
    sick: 50

  heartbeep:
    # How quickly the heart beep sound effect will play
    normal: 0
    double: 0
    half: 0
    quarter: 0
    'off': 50

  heartcolor:
    # The color of hearts in the HUD
    red: 50
    blue: 50
    green: 50
    yellow: 50

  quickswap:
    # Allows you to quickly swap items while playing with L/R
    'false': 0
    'true': 50

  menuspeed:
    # How quickly the menu appears/disappears
    normal: 50
    instant: 50
    double: 50
    triple: 50
    quadruple: 50
    half: 0

  music:
    # Whether background music will play in game
    'false': 0
    'true': 50

  reduceflashing:
    # Reduces flashing for certain scenes such as the Misery Mire and Ganon's Tower opening cutscenes
    'false': 0
    'true': 50

  triforcehud:
    # When and how the triforce hunt HUD should display
    normal: 50
    hide_goal: 0
    hide_required: 0
    hide_both: 0

  plando_items:
    - item:
        Moon Pearl: 1
      location: CaesiusHIT's Hookshot Badge
      world: The Shop
      force: true
    - item:
        Hammer: 1
      location: CaesiusHIT's Umbrella
      world: The Shop
      force: true
    - item:
        Magic Mirror: 1
      location: CaesiusHIT's Item Magnet Badge
      world: The Shop
      force: true
    - item:
        Hookshot: 1
      location: CaesiusHIT's Hover Badge
      world: The Shop
      force: true
    - item:
        Flute: 1
      location: Locker 52
      world: The Vault
      force: true
    - item:
        Bug Catching Net: 1
      location: Locker 165
      world: The Vault
      force: true
    - item:
        Half Magic: 1
      location: Locker 135
      world: The Vault
      force: true
    - item:
        Progressive Glove: 1
      location: Locker 145
      world: The Vault
      force: true

A Hat in Time:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    #
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    #
    # - **Locations:** ensure everything can be reached and acquired.
    # - **Items:** ensure all logically relevant items can be acquired.
    # - **Minimal:** ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    'false': 0
    'true': 50

  # General Options
  EndGoal:
    # The end goal required to beat the game.
    # Finale: Reach Time's End and beat Mustache Girl. The Finale will be in its vanilla location.
    #
    # Rush Hour: Reach and complete Rush Hour. The level will be in its vanilla location and Chapter 7
    # will be the final chapter. You also must find Nyakuza Metro itself and complete all of its levels.
    # Requires DLC2 content to be enabled.
    #
    # Seal the Deal: Reach and complete the Seal the Deal death wish main objective.
    # Requires Death Wish content to be enabled.
    finale: 50
    rush_hour: 50
    seal_the_deal: 0

  ShuffleAlpineZiplines:
    # If enabled, Alpine's zipline paths leading to the peaks will be locked behind items.
    'false': 25
    'true': 50

  LogicDifficulty:
    # Choose the difficulty setting for logic.
    # For an exhaustive list of all logic tricks for each difficulty, see this Google Doc:
    # https://docs.google.com/document/d/1x9VLSQ5davfx1KGamR9T0mD5h69_lDXJ6H7Gq7knJRI/edit?usp=sharing
    normal: 0
    moderate: 50
    hard: 0
    expert: 0

  ShuffleStorybookPages:
    # If enabled, each storybook page in the purple Time Rifts is an item check.
    # The Compass Badge can track these down for you.
    'false': 50
    'true': 50

  ShuffleActContracts:
    # If enabled, shuffle Snatcher's act contracts into the pool as items
    'false': 0
    'true': 50

  ShuffleSubconPaintings:
    # If enabled, shuffle items into the pool that unlock Subcon Forest fire spirit paintings.
    # These items are progressive, with the order of Village-Swamp-Courtyard.
    'false': 25
    'true': 50

  NoPaintingSkips:
    # If enabled, prevent Subcon fire wall skips from being in logic on higher difficulty settings.
    'false': 0
    'true': 50

  CTRLogic:
    # Choose how you want to logically clear Cheating the Race.
    time_stop_only: 50
    scooter: 50
    sprint: 50
    nothing: 0

  MinPonCost:
    # The minimum number of Pons that any item in the Badge Seller's shop can cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 800
    75: 0
    random: 0
    random-low: 50
    random-high: 0

  MaxPonCost:
    # The maximum number of Pons that any item in the Badge Seller's shop can cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 800
    300: 0
    random: 0
    random-low: 0
    random-high: 50

  BadgeSellerMinItems:
    # The smallest number of items that the Badge Seller can have for sale.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    4: 0
    random: 0
    random-low: 0
    random-high: 50

  BadgeSellerMaxItems:
    # The largest number of items that the Badge Seller can have for sale.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    8: 0
    random: 0
    random-low: 0
    random-high: 50

  # Act Options
  ActRandomizer:
    # If enabled, shuffle the game's Acts between each other.
    # Light will cause Time Rifts to only be shuffled amongst each other,
    # and Blue Time Rifts and Purple Time Rifts to be shuffled separately.
    'false': 0
    light: 0
    insanity: 50

  ActPlando:
    # Plando acts onto other acts. For example, "Train Rush": "Alpine Free Roam" will place Alpine Free Roam
    # at Train Rush.
    {}

  ActBlacklist:
    # Blacklist acts from being shuffled onto other acts. Multiple can be listed per act.
    # For example, "Barrel Battle": ["The Big Parade", "Dead Bird Studio"]
    # will prevent The Big Parade and Dead Bird Studio from being shuffled onto Barrel Battle.
    {}

  FinaleShuffle:
    # If enabled, chapter finales will only be shuffled amongst each other in act shuffle.
    'false': 50
    'true': 0

  StartingChapter:
    # Determines which chapter you will be guaranteed to be able to enter at the beginning of the game.
    '1': 50
    '2': 50
    '3': 50
    '4': 50

  LowestChapterCost:
    # Value determining the lowest possible cost for a chapter.
    # Chapter costs will, progressively, be calculated based on this value (except for the final chapter).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    5: 0
    random: 0
    random-low: 50
    random-high: 0

  HighestChapterCost:
    # Value determining the highest possible cost for a chapter.
    # Chapter costs will, progressively, be calculated based on this value (except for the final chapter).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 45
    25: 0
    random: 0
    random-low: 0
    random-high: 50

  ChapterCostIncrement:
    # Lower values mean chapter costs increase slower. Higher values make the cost differences more steep.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 8
    4: 0
    random: 50
    random-low: 0
    random-high: 0

  ChapterCostMinDifference:
    # The minimum difference between chapter costs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 8
    4: 0
    random: 0
    random-low: 50
    random-high: 0

  FinalChapterMinCost:
    # Minimum Time Pieces required to enter the final chapter. This is part of your goal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    30: 0
    random: 0
    random-low: 0
    random-high: 50

  FinalChapterMaxCost:
    # Maximum Time Pieces required to enter the final chapter. This is part of your goal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    35: 0
    random: 0
    random-low: 0
    random-high: 50

  # Item Options
  YarnBalancePercent:
    # How much (in percentage) of the yarn in the pool that will be progression balanced.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 0
    random: 50
    random-low: 0
    random-high: 0

  TimePieceBalancePercent:
    # How much (in percentage) of time pieces in the pool that will be progression balanced.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    35: 0
    random: 50
    random-low: 0
    random-high: 0

  RandomizeHatOrder:
    # Randomize the order that hats are stitched in.
    # Time Stop Last will force Time Stop to be the last hat in the sequence.
    'false': 0
    'true': 50
    time_stop_last: 0

  UmbrellaLogic:
    # Makes Hat Kid's default punch attack do absolutely nothing, making the Umbrella much more relevant and useful
    'false': 0
    'true': 50

  StartWithCompassBadge:
    # If enabled, start with the Compass Badge. In Archipelago, the Compass Badge will track all items in the world
    # (instead of just Relics). Recommended if you're not familiar with where item locations are.
    'false': 0
    'true': 50

  CompassBadgeMode:
    # closest - Compass Badge points to the closest item regardless of classification
    # important_only - Compass Badge points to progression/useful items only
    # important_first - Compass Badge points to progression/useful items first, then it will point to junk items
    closest: 50
    important_only: 0
    important_first: 0

  MaxExtraTimePieces:
    # Maximum number of extra Time Pieces from the DLCs.
    # Arctic Cruise will add up to 6. Nyakuza Metro will add up to 10. The absolute maximum is 56.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  YarnCostMin:
    # The minimum possible yarn needed to stitch a hat.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 12
    4: 0
    random: 0
    random-low: 50
    random-high: 0

  YarnCostMax:
    # The maximum possible yarn needed to stitch a hat.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 12
    8: 0
    random: 0
    random-low: 0
    random-high: 50

  YarnAvailable:
    # How much yarn is available to collect in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 30
    # Maximum value is 80
    50: 0
    random: 0
    random-low: 0
    random-high: 50

  MinExtraYarn:
    # The minimum number of extra yarn in the item pool.
    # There must be at least this much more yarn over the total number of yarn needed to craft all hats.
    # For example, if this option's value is 10, and the total yarn needed to craft all hats is 40,
    # there must be at least 50 yarn in the pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 15
    10: 0
    random: 0
    random-low: 50
    random-high: 0

  HatItems:
    # Removes all yarn from the pool and turns the hats into individual items instead.
    'false': 50
    'true': 50

  # Arctic Cruise Options
  EnableDLC1:
    # Shuffle content from The Arctic Cruise (Chapter 6) into the game. This also includes the Tour time rift.
    # DO NOT ENABLE THIS OPTION IF YOU DO NOT HAVE SEAL THE DEAL DLC INSTALLED!!!
    'false': 0
    'true': 50

  Tasksanity:
    # If enabled, Ship Shape tasks will become checks. Requires DLC1 content to be enabled.
    'false': 50
    'true': 0

  TasksanityTaskStep:
    # How many tasks the player must complete in Tasksanity to send a check.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 3
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  TasksanityCheckCount:
    # How many Tasksanity checks there will be in total.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 30
    18: 50
    random: 0
    random-low: 0
    random-high: 0

  ExcludeTour:
    # Removes the Tour time rift from the game. This option is recommended if you don't want to deal with
    # important levels being shuffled onto the Tour time rift, or important items being shuffled onto Tour pages
    # when your goal is Time's End.
    'false': 50
    'true': 0

  ShipShapeCustomTaskGoal:
    # Change the number of tasks required to complete Ship Shape. If this option's value is 0, the number of tasks
    # required will be TasksanityTaskStep x TasksanityCheckCount, if Tasksanity is enabled. If Tasksanity is disabled,
    # it will use the game's default of 18.
    # This option will not affect Cruisin' for a Bruisin'.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 90
    0: 0
    5: 10
    6: 10
    7: 10
    8: 10
    9: 10
    10: 10
    random: 0
    random-low: 0
    random-high: 0

  # Nyakuza Metro Options
  EnableDLC2:
    # Shuffle content from Nyakuza Metro (Chapter 7) into the game.
    # DO NOT ENABLE THIS OPTION IF YOU DO NOT HAVE NYAKUZA METRO DLC INSTALLED!!!
    'false': 0
    'true': 50

  BaseballBat:
    # Replace the Umbrella with the baseball bat from Nyakuza Metro.
    # DLC2 content does not have to be shuffled for this option but Nyakuza Metro still needs to be installed.
    'false': 50
    'true': 0

  MetroMinPonCost:
    # The cheapest an item can be in any Nyakuza Metro shop. Includes ticket booths.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 800
    50: 0
    random: 0
    random-low: 50
    random-high: 0

  MetroMaxPonCost:
    # The most expensive an item can be in any Nyakuza Metro shop. Includes ticket booths.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 800
    200: 0
    random: 0
    random-low: 0
    random-high: 50

  NyakuzaThugMinShopItems:
    # The smallest number of items that the thugs in Nyakuza Metro can have for sale.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    2: 0
    random: 0
    random-low: 0
    random-high: 50

  NyakuzaThugMaxShopItems:
    # The largest number of items that the thugs in Nyakuza Metro can have for sale.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    4: 0
    random: 0
    random-low: 0
    random-high: 50

  NoTicketSkips:
    # Prevent metro gate skips from being in logic on higher difficulties.
    # Rush Hour option will only consider the ticket skips for Rush Hour in logic.
    'false': 50
    'true': 0
    rush_hour: 0

  # Death Wish Options
  EnableDeathWish:
    # Shuffle Death Wish contracts into the game. Each contract by default will have 1 check granted upon completion.
    # DO NOT ENABLE THIS OPTION IF YOU DO NOT HAVE SEAL THE DEAL DLC INSTALLED!!!
    'false': 50
    'true': 0

  DWShuffle:
    # An alternative mode for Death Wish where each contract is unlocked one by one, in a random order.
    # Stamp requirements to unlock contracts is removed. Any excluded contracts will not be shuffled into the sequence.
    # If Seal the Deal is the end goal, it will always be the last Death Wish in the sequence.
    # Disabling candles is highly recommended.
    'false': 50
    'true': 0

  DWShuffleCountMin:
    # The minimum number of Death Wishes that can be in the Death Wish shuffle sequence.
    # The final result is clamped at the number of non-excluded Death Wishes.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 38
    18: 50
    random: 0
    random-low: 0
    random-high: 0

  DWShuffleCountMax:
    # The maximum number of Death Wishes that can be in the Death Wish shuffle sequence.
    # The final result is clamped at the number of non-excluded Death Wishes.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 38
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  DeathWishOnly:
    # An alternative gameplay mode that allows you to exclusively play Death Wish in a seed.
    # This has the following effects:
    # - Death Wish is instantly unlocked from the start
    # - All hats and other progression items are instantly given to you
    # - Useful items such as Fast Hatter Badge will still be in the item pool instead of in your inventory at the start
    # - All chapters and their levels are unlocked, act shuffle is forced off
    # - Any checks other than Death Wish contracts are completely removed
    # - All Pons in the item pool are replaced with Health Pons or random cosmetics
    # - The EndGoal option is forced to complete Seal the Deal
    'false': 50
    'true': 0

  DWEnableBonus:
    # In Death Wish, add a location for completing all of a DW contract's bonuses,
    # in addition to the location for completing the DW contract normally.
    # WARNING!! Only for the brave! This option can create VERY DIFFICULT SEEDS!
    # ONLY turn this on if you know what you are doing to yourself and everyone else in the multiworld!
    # Using Peace and Tranquility to auto-complete the bonuses will NOT count!
    'false': 50
    'true': 0

  DWAutoCompleteBonuses:
    # If enabled, auto complete all bonus stamps after completing the main objective in a Death Wish.
    # This option will have no effect if bonus checks (DWEnableBonus) are turned on.
    'false': 0
    'true': 50

  DWExcludeAnnoyingContracts:
    # Exclude Death Wish contracts from the pool that are particularly tedious or take a long time to reach/clear.
    # Excluded Death Wishes are automatically completed as soon as they are unlocked.
    # This option currently excludes the following contracts:
    # - Vault Codes in the Wind
    # - Boss Rush
    # - Camera Tourist
    # - The Mustache Gauntlet
    # - Rift Collapse: Deep Sea
    # - Cruisin' for a Bruisin'
    # - Seal the Deal (non-excluded if goal, but the checks are still excluded)
    'false': 0
    'true': 50

  DWExcludeAnnoyingBonuses:
    # If Death Wish full completions are shuffled in, exclude tedious Death Wish full completions from the pool.
    # Excluded bonus Death Wishes automatically reward their bonus stamps upon completion of the main objective.
    # This option currently excludes the following bonuses:
    # - So You're Back From Outer Space
    # - Encore! Encore!
    # - Snatcher's Hit List
    # - 10 Seconds until Self-Destruct
    # - Killing Two Birds
    # - Zero Jumps
    # - Bird Sanctuary
    # - Wound-Up Windmill
    # - Vault Codes in the Wind
    # - Boss Rush
    # - Camera Tourist
    # - The Mustache Gauntlet
    # - Rift Collapse: Deep Sea
    # - Cruisin' for a Bruisin'
    # - Seal the Deal
    'false': 0
    'true': 50

  DWExcludeCandles:
    # If enabled, exclude all candle Death Wishes.
    'false': 0
    'true': 50

  DWTimePieceRequirement:
    # How many Time Pieces that will be required to unlock Death Wish.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 35
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  # Trap Options
  TrapChance:
    # The chance for any junk item in the pool to be replaced by a trap.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 0
    random: 50
    random-low: 0
    random-high: 0

  BabyTrapWeight:
    # The weight of Baby Traps in the trap pool.
    # Baby Traps place a multitude of the Conductor's grandkids into Hat Kid's hands, causing her to lose her balance.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  LaserTrapWeight:
    # The weight of Laser Traps in the trap pool.
    # Laser Traps will spawn multiple giant lasers (from Snatcher's boss fight) at Hat Kid's location.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  ParadeTrapWeight:
    # The weight of Parade Traps in the trap pool.
    # Parade Traps will summon multiple Express Band owls with knives that chase Hat Kid by mimicking her movement.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  plando_items:
    - item:
        Hookshot Badge: 1
      location: CaesiusHIT's Hookshot Badge
      world: The Shop
      force: true
    - item:
        Umbrella: 1
      location: CaesiusHIT's Umbrella
      world: The Shop
      force: true
    - item:
        Item Magnet Badge: 1
      location: CaesiusHIT's Item Magnet Badge
      world: The Shop
      force: true
    - item:
        Hover Badge: 1
      location: CaesiusHIT's Hover Badge
      world: The Shop
      force: true
    - item:
        Badge Pin: 1
      location: Locker 52
      world: The Vault
      force: true
    - item:
        Badge Pin: 1
      location: Locker 165
      world: The Vault
      force: true
    - item:
        Fast Hatter Badge: 1
      location: Locker 135
      world: The Vault
      force: true
    - item:
        Zipline Unlock - The Windmill Path: 1
      location: Locker 145
      world: The Vault
      force: true
  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

---

name: CaesiusSM64

# Used to describe your yaml. Useful if you have multiple files.
description: SM64

game: Super Mario 64
requires:
  version: 0.5.0 # Version of Archipelago required for this yaml to work as expected.

Super Mario 64:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    #
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    #
    # - **Locations:** ensure everything can be reached and acquired.
    # - **Items:** ensure all logically relevant items can be acquired.
    # - **Minimal:** ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  area_rando:
    # Randomize Entrances
    'off': 0
    courses_only: 0
    courses_and_secrets_separate: 0
    courses_and_secrets: 50

  buddy_checks:
    # Bob-omb Buddies are checks, Cannon Unlocks are items
    'false': 0
    'true': 50

  exclamation_boxes:
    # Include 1Up Exclamation Boxes during randomization.
    # Adds 29 locations to the pool.
    'off': 0
    1ups_only: 50

  progressive_keys:
    # Keys will first grant you access to the Basement, then to the Second Floor
    'false': 0
    'true': 50

  enable_coin_stars:
    # Disable to Ignore 100 Coin Stars. You can still collect them, but they don't do anything.
    # Removes 15 locations from the pool.
    'false': 50
    'true': 0

  enable_move_rando:
    # Mario is unable to perform some actions until a corresponding item is picked up.
    # This option is incompatible with builds using a 'nomoverando' branch.
    # Specific actions to randomize can be specified in the YAML.
    'false': 0
    'true': 50

  move_rando_actions:
    # Which actions to randomize when Move Randomizer is enabled
    ['Triple Jump', 'Long Jump', 'Backflip', 'Side Flip', 'Wall Kick', 'Dive', 'Ground Pound', 'Kick', 'Climb', 'Ledge Grab']

  strict_cap_requirements:
    # If disabled, Stars that expect special caps may have to be acquired without the caps
    'false': 0
    'true': 50

  strict_cannon_requirements:
    # If disabled, Stars that expect cannons may have to be acquired without them.
    # Has no effect if Buddy Checks and Move Randomizer are disabled
    'false': 0
    'true': 50

  strict_move_requirements:
    # If disabled, Stars that expect certain moves may have to be acquired without them. Only makes a difference
    # if Move Randomization is enabled
    'false': 0
    'true': 50

  amount_of_stars:
    # How many stars exist.
    # If there aren't enough locations to hold the given total, the total will be reduced.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 35
    # Maximum value is 120
    120: 0
    random: 0
    random-low: 0
    random-high: 50

  first_bowser_star_door_cost:
    # What percent of the total stars are required at the Star Door to Bowser in the Dark World
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    7: 0
    random: 0
    random-low: 50
    random-high: 0

  basement_star_door_cost:
    # What percent of the total stars are required at the Star Door in the Basement
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    25: 0
    random: 0
    random-low: 50
    random-high: 0

  second_floor_star_door_cost:
    # What percent of the total stars are required to access the third floor
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    42: 0
    random: 0
    random-low: 0
    random-high: 50

  mips1_cost:
    # What percent of the total stars are required to spawn MIPS the first time
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 35
    12: 0
    random: 0
    random-low: 50
    random-high: 0

  mips2_cost:
    # What percent of the total stars are required to spawn MIPS the second time.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    42: 0
    random: 0
    random-low: 0
    random-high: 50

  stars_to_finish:
    # What percent of the total stars are required at the infinite stairs
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 90
    58: 0
    random: 0
    random-low: 0
    random-high: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    'false': 0
    'true': 50

  completion_type:
    # Set goal for game completion
    last_bowser_stage: 0
    all_bowser_stages: 50

  plando_items:
    - item:
        Side Flip: 1
      location: CaesiusSM64's Side Flip
      world: The Shop
      force: true
    - item:
        Wall Kick: 1
      location: CaesiusSM64's Wall Kick
      world: The Shop
      force: true
    - item:
        Cannon Unlock JRB: 1
      location: CaesiusSM64's Cannon Unlock JRB
      world: The Shop
      force: true
    - item:
        Kick: 1
      location: CaesiusSM64's Kick
      world: The Shop
      force: true
    - item:
        Power Star: 1
      location: Locker 238
      world: The Vault
      force: true
    - item:
        Ground Pound: 1
      location: Locker 132
      world: The Vault
      force: true
    - item:
        Cannon Unlock WF: 1
      location: Locker 10
      world: The Vault
      force: true
    - item:
        Progressive Key: 1
      location: Locker 119
      world: The Vault
      force: true
  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
